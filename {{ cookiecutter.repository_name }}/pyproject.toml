[tool.poetry]
name = "{{ cookiecutter.repository_name }}"
version = "{{ cookiecutter.release }}"
description = "{{ cookiecutter.description }}"
{% if cookiecutter.license == "MIT" -%}
license = "MIT"
{% elif cookiecutter.license == "GNU GPL" -%}
license = "GPL-3.0-or-later"
{% else -%}
license = "Proprietary"
{% endif -%}
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]
maintainers = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]
readme = "README.md"
homepage = "https://{{ cookiecutter.remote_username }}.github.io/{{ cookiecutter.repository_name }}"
repository = "https://github.com/{{ cookiecutter.remote_username }}/{{ cookiecutter.repository_name }}"
documentation = "https://{{ cookiecutter.remote_username }}.github.io/{{ cookiecutter.repository_name }}"
keywords = []
classifiers = []
packages = [
    {include = "{{ cookiecutter.package_name }}", from = "src"},
]
include = []
exclude = []

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
pydantic-settings = "^2.2.1"

[tool.poetry.group.ci-cd.dependencies]
nox = "^2024.4.15"

[tool.poetry.group.cookiecutter.dependencies]
cruft = {extras = ["pyproject"], version = "^2.15.0"}

[tool.poetry.group.docs.dependencies]
myst-parser = {extras = ["linkify"], version = "^3.0.1"}
pydata-sphinx-theme = "^0.15.2"
Sphinx = "^7.3.7"
sphinx-copybutton = "^0.5.2"

[tool.poetry.group.notebook.dependencies]
jupyterlab = "^4.2.0"

[tool.poetry.group.pre-commit.dependencies]
black = "^24.4.2"
detect-secrets = "^1.5.0"
flake8 = "^7.0.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.4.6"
flake8-docstrings = "^1.7.0"
flake8-rst-docstrings = "^0.3.0"
isort = "^5.13.2"
mypy = "^1.10.0"
nbqa = "^1.8.5"
nbstripout = "^0.7.1"
pre-commit = "^3.7.1"
pre-commit-hooks = "^4.6.0"
safety = "^2.3.4"

[tool.poetry.group.testing.dependencies]
coverage = {extras = ["toml"], version = "^7.5.1"}
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:"]
include = ["src/*"]
show_missing = true

[tool.coverage.run]
omit = ["tests/*"]

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.nbqa.addopts]
flake8 = [
    "--extend-ignore=E402"
]

[tool.pytest.ini_options]
addopts = ["-vv", "--doctest-modules"]
doctest_optionflags = "NORMALIZE_WHITESPACE"
testpaths = ["./tests"]
