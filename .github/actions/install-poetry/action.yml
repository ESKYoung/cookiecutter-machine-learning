name: "Install `poetry`"
description: "Installs Poetry to a runner."

inputs:
  poetry-version:
    description: "Poetry version to use. Default to use Poetry 1.8.2."
    required: false
    default: "1.8.2"
  python-version:
    description: "Version range or exact version of Python or PyPy to use."

outputs:
  full-python-version:
    description: "Full Python version used when installing Poetry."
    value: ${{ steps.full-python-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Get full Python version
      id: full-python-version
      run: echo "version=$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache Poetry installation
      uses: actions/cache@v4
      id: cache-poetry-install
      with:
        path: |
          ~/.local/bin/poetry
          ~/.local/share/pypoetry
        key: cache-${{ github.repository }}-main-${{ github.job }}-poetry-install-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ inputs.poetry-version }}

    - name: Install Poetry ${{ inputs.poetry-version }}
      if: ${{ steps.cache-poetry-install.outputs.cache-hit != 'true' }}
      run: curl -sSL https://install.python-poetry.org | python3 - --version ${{ inputs.poetry-version }}
      shell: bash

    - name: Update PATH to run `poetry`
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      shell: bash

    - name: Configure Poetry
      run: poetry config virtualenvs.in-project true
      shell: bash
